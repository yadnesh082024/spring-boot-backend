name: 'Update Repository Manifests'
description: 'Update image tag and appVersion for a single repository'

inputs:
  repo:
    description: 'Repository name (owner/repo)'
    required: true
  folder:
    description: 'Folder containing the Helm chart'
    required: true
  secret:
    description: 'GitHub token for accessing the repository'
    required: true
  image_tag:
    description: 'New image tag to be used in the Helm charts'
    required: true

runs:
  using: 'composite'
  steps:
    # Checkout the Kubernetes manifests repository.
    - name: Checkout Manifests
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repo }}
        token: ${{ secrets[inputs.secret] }}  # Using the secret passed as input

    # Set up Git configuration for committing changes.
    - name: Set up Git
      run: |
        git config --global user.name "GitHub-Actions-CI-Build"
        git config --global user.email "user@gitHubActions.com"

    # Update Helm values with the new image tag.
    - name: Update Helm Values
      run: |
        echo "Updating Helm values with new image tag: ${{ inputs.image_tag }}"
        sed -i "s/tag:.*/tag: ${{ inputs.image_tag }}/" ${{ inputs.folder }}/values.yaml

    # Extract and increment appVersion for Argo CD and Rollouts.
    - name: Increment appVersion
      id: increment_version
      run: |
        increment_version() {
          local chart_path=$1
          local env_var_name=$2
        
          current_version=$(grep '^appVersion:' ${chart_path}/Chart.yaml | cut -d ' ' -f 2 | tr -d '"')
          current_date=$(date +'%Y.%m')
        
          if [[ $current_version == $current_date* ]]; then
            patch_number=$(echo $current_version | cut -d '.' -f 3)
            patch_number=$((patch_number + 1))
          else
            patch_number=0
          fi
        
          new_version="${current_date}.${patch_number}"
          echo "${env_var_name}=${new_version}" >> $GITHUB_ENV
        }
        
        increment_version ${{ inputs.folder }} "new_version"

    # Update appVersion in Chart.yaml
    - name: Update appVersion in Chart.yaml
      run: |
        echo "Updating appVersion to ${{ env.new_version }} in Chart.yaml"
        sed -i "s/^appVersion:.*/appVersion: \"${{ env.new_version }}\"/" ${{ inputs.folder }}/Chart.yaml

    # Check for changes, commit if necessary, and create a pull request if not on main.
    - name: Check for Changes and Commit
      run: |
        git add .
        if ! git diff-index --quiet HEAD --; then
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            git commit -m "Updated image tag to ${{ inputs.image_tag }} and incremented app versions"
            git push origin main || echo "Push failed, possibly due to lack of permissions"
          else
            # Create a pull request if the branch is not main
            TIMESTAMP=$(date +'%Y%m%d%H%M%S')
            BRANCH_NAME="update-feature/${{ github.ref_name }}-${TIMESTAMP}"
            git checkout -b $BRANCH_NAME
            git commit -m "Update image tag to ${{ inputs.image_tag }} and incremented app versions"
            git push -u origin $BRANCH_NAME
        
            # Create the pull request using GitHub CLI
            gh pr create --title "Updated image tag to ${{ inputs.image_tag }}" --body "This PR updates the image tag to ${{ inputs.image_tag }}."
          fi
        else
          echo "No changes detected."
        fi

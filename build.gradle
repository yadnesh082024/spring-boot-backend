plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "4.4.1.3373"
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'

	// Updated Spring Framework dependencies
	implementation 'org.springframework:spring-web:6.1.13'
	implementation 'org.springframework:spring-webmvc:6.1.13'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}

sonar {
	properties {
		property "sonar.projectKey", "yadnesh082024_github-actions-hands-on"
		property "sonar.organization", "ci-cd-github-actions"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}